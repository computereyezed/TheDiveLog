@page "/divelog/addeditdiver/{Act:bool}"
@inject HttpClient http
@inject NavigationManager uriHelper
@inject IJSRuntime js

<AuthorizeView>
    <Authorized>
        <h5>@butontext</h5>
        <DiverForm ButtonText=@butontext dvr="dvr" OnValidSubmit="@SaveDiver" />
    </Authorized>
    <NotAuthorized>
        <h1>Authentication Failure!</h1>
        <p>You're not signed in.</p>
    </NotAuthorized>
</AuthorizeView>
<h3>AddEditDiver</h3>

@code {
    [Parameter] public bool Act { get; set; }

    string butontext = string.Empty;

    DiverFormData dfd = new DiverFormData();
    DiverInformation dvr = new DiverInformation();

    protected async override Task OnParametersSetAsync()
    {
        try
        {
            if (Act)
            {
                dfd = await http.GetFromJsonAsync<DiverFormData>($"api/diver");
                dvr = dfd.Diver;

                butontext = "Update Diver";
            }
            else
            {
                dfd = await http.GetFromJsonAsync<DiverFormData>($"api/diver");
                dvr = new DiverInformation();
                butontext = "New Diver";
            }
        }
        catch (Exception ex)
        {
            string e = ex.InnerException.ToString();
        }
    }

    async Task SaveDiver()
    {
        if (Act)
        {
            await http.PutAsJsonAsync("api/diver", dvr);
            await js.InvokeVoidAsync("alert", $"Updated Suicessfully!");
            uriHelper.NavigateTo("viewdiver");

        }
        else
        {
            await http.PostAsJsonAsync("api/diver", dvr);
            uriHelper.NavigateTo("viewdiver");
        }
    }
}
