@page "/viewdiver"
@inject HttpClient client
@inject IJSRuntime js

<h3>View Diver Information</h3>

@{
    string title = string.Empty;
}

@if (AppState.IsAuthenticated)
{
    @if (diverview == null)
    {
        title = "Loading...";
    }
    else if (diverview.Certs.Count < 1)
    {
        <div class="row">
            <div class="col-sm-3 form-group">
                <a class="btn btn-success" href="divelog/addeditdiver/false/0" data-toggle="tooltip" data-placement="auto" title="New Diver"><i class="oi oi-plus"></i></a>
            </div>
            <div class="col-sm-3"><h5>No Records Found.</h5></div>
            <div class="col-sm-6 justify-content-end">
                <h5>Total HR's Bottom Time: 0</h5>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-sm-3 form-group">
                <a class="btn btn-success" href="divelog/addeditdiver/false/0" data-toggle="tooltip" data-placement="auto" title="New Diver"><i class="oi oi-plus"></i></a>
            </div>
            <div class="col-sm-3"><h5>Records Found: </h5></div>
            <div class="col-sm-6 justify-content-end">
                
            </div>
        </div>
        <div class="row">
            <div class="col-6">

            </div>
            <div class="col-6">
                <div class="row">
                    <div class="col-12 table">
                        <div class="lh-table-container">
                            <div class="lh-header-container">
                            </div>
                            <div class="lh-table-container-inner">
                                <table class="table table-condensed table-striped table-hover">
                                    <thead>
                                        <tr>
                                            <th class="lh-th"><div class="lh-th-bottomline"></div></th>
                                            <th class="lh-th"><div class="lh-th-bottomline">Date</div></th>
                                            <th class="lh-th"><div class="lh-th-bottomline">Certification</div></th>
                                            <th class="lh-th"><div class="lh-th-bottomline">InstrNo</div></th>
                                            <th class="lh-th"><div class="lh-th-bottomline">InstrName</div></th>
                                            <th class="lh-th"><div class="lh-th-bottomline"></div></th>
                                        </tr>
                                    </thead>
                                    <tbody class="rowlink" data-link="row">
                                        @foreach (DiverView.CertView cert in diverview.Certs)
                                        {
                                            //var tt = $"Located in: {dive.Located}{System.Environment.NewLine}" +
                                            //         $"Latitude: {dive.Latitude}{System.Environment.NewLine}" +
                                            //         $"Longitude: {dive.Longitude}{System.Environment.NewLine}" +
                                            //         $" What to see: {dive.WhatToSee}";

                                        <tr>
                                            <td class="lh-td">
                                                <a class="btn btn-transparent text-primary" href="divelog/addeditdiver/true/@cert.Id" data-toggle="tooltip" data-placement="auto" title="Edit Dive"><i class="oi oi-pencil"></i></a>
                                            </td>
                                            <td class="lh-td">@cert.CertDate?.ToString("MM/dd/yyyy")</td>
                                            <td class="col-1 lh-td">@cert.Certification</td>
                                            <td class="lh-td">@cert.InstrNo</td>
                                            <td class="lh-td">@cert.InstrName</td>
                                            <td class="lh-td">
                                                <a class="btn btn-transparent text-danger" @onclick="@(() => Delete(cert.Id))" data-toggle="tooltip" data-placement="auto" title="Remove Dive"><i class="oi oi-delete"></i></a>
                                            </td>
                                        </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    }
}
else
{
    <h1>Authentication Failure!</h1>
    <p>You're not signed in.</p>
}


@code {
    DiverView diverview { get; set; }

    protected override async Task OnInitializedAsync()
    {
        diverview = await client.GetFromJsonAsync<DiverView>($"api/diver/byUserId?userid={AppState.UserId}");
    }

    async Task Delete(long diverId)
    {
        //var dr = dvr.First(x => x. == diverId);
        //if (await js.InvokeAsync<bool>("confirm", $"Do you want to delete diver {dr.DiverName} record?"))
        //{
        //    await client.DeleteAsync($"api/dive/{diverId}");
        //    await OnInitializedAsync();
        //}
    }
}
